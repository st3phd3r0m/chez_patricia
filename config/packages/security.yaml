security:
    encoders:
        App\Entity\Customer:
            algorithm: auto
        App\Entity\Users:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)

        customers:
            entity: 
                class: App\Entity\Customer
                property: email

        administrators:
            entity: 
                class: App\Entity\Users
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        customer_domain:
            pattern: ^/(customer|logincustomer|logoutcustomer)
            provider: customers
            anonymous: lazy
            guard:
                authenticators: 
                    - customers_authenticator
            logout:
                path: customer_logout
                target: customer_login

        admin_domain:
            pattern: ^/(admin|loginadmin|logoutadmin)
            provider: administrators
            anonymous: lazy
            guard:
                authenticators: 
                    - administrators_authenticator
            logout:
                path: admin_logout
                target: admin_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # - { path: ^/profile, roles: ROLE_USER }
    access_control:        
        - { path: '^/admin', roles: ROLE_ADMIN }
        - { path: '^/customer', roles: ROLE_CUSTOMER }
